{"ast":null,"code":"import _asyncToGenerator from \"D:/ionic-ecommerce-app-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../util.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nfunction SavedcardsPage_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelement(1, \"ion-spinner\", 19);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SavedcardsPage_ion_card_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-card\", 20)(1, \"ion-card-content\")(2, \"div\", 21)(3, \"ion-icon\", 22);\n    i0.ɵɵlistener(\"click\", function SavedcardsPage_ion_card_12_Template_ion_icon_click_3_listener($event) {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateAndNavigate($event, item_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-checkbox\", 23);\n    i0.ɵɵlistener(\"ionChange\", function SavedcardsPage_ion_card_12_Template_ion_checkbox_ionChange_4_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleCardSelection(item_r2));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"ion-icon\", 24);\n    i0.ɵɵlistener(\"click\", function SavedcardsPage_ion_card_12_Template_ion_icon_click_6_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteCard(item_r2.id));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 25)(8, \"h2\", 26);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"h2\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"h2\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"checked\", ctx_r2.selectedCards == item_r2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Card Holder Name: \", item_r2.card_name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Card Number:\", ctx_r2.formatCardNumber(item_r2.card_num), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Expiry Date:\", item_r2.exp_date, \"\");\n  }\n}\nexport let SavedcardsPage = /*#__PURE__*/(() => {\n  class SavedcardsPage {\n    constructor(util, router, alertController, modalController) {\n      this.util = util;\n      this.router = router;\n      this.alertController = alertController;\n      this.modalController = modalController;\n      this.loginUser = [];\n      this.cardData = [];\n      this.selectedCards = null;\n      // selectcard: boolean = false;\n      this.totaprice = 0;\n      this.postid = [];\n      this.loadCheckoutData = true;\n    }\n    ionViewWillEnter() {\n      this.getLoginUser();\n      this.usercarddata();\n      this.totalPrice();\n      const navData = this.router.getCurrentNavigation();\n      if (navData?.extras?.state) {\n        this.selectedAddressId = navData.extras.state.selectedAddressId || null;\n      }\n      console.log('Selected Address ID:', this.selectedAddressId);\n    }\n    getLoginUser() {\n      let user = JSON.parse(localStorage.getItem('login'));\n      if (user != null) {\n        this.loginUser = user;\n      }\n    }\n    usercarddata() {\n      this.cardData = [];\n      const token = this.loginUser.token;\n      this.util.sendData('savedcards', {}, token).subscribe({\n        next: p => {\n          if (p.status == 'success') {\n            this.cardData = p.data;\n            console.log('Usercard Data:', this.cardData);\n            this.loadCheckoutData = false; // Turn off loading spinner\n          } else {\n            console.log('An error occurred. Try Again.');\n            this.loadCheckoutData = false; // Turn off loading spinner\n          }\n        }\n      });\n    }\n    totalPrice() {\n      const token = this.loginUser.token;\n      this.util.sendData('doCheckout', {}, token).subscribe({\n        next: p => {\n          if (p.status == 'success') {\n            this.totaprice = p.data.totalPrice;\n            this.postid = p.data.cart_items.map(p => p.Id);\n            console.log('Total Price:', this.totaprice);\n            console.log('Post Ids:', this.postid);\n            this.loadCheckoutData = false; // Turn off loading spinner\n          } else {\n            console.log('An Error Occurred. Try Again.');\n            this.loadCheckoutData = false; // Turn off loading spinner\n          }\n        }\n      });\n    }\n    toggleCardSelection(card) {\n      this.selectedCards = this.selectedCards === card ? null : card;\n      console.log('Selected Card:', this.selectedCards);\n      // console.log('card', this.selectcard)\n      // if(this.selectcard) {\n      //   this.selectedCards = card;\n      // } else {\n      //   this.selectedCards = '';\n      // }\n    }\n    payout() {\n      if (!this.selectedCards) {\n        console.log('No cards selected for payout.');\n        return; // Early return if no cards are selected\n      }\n      if (!this.selectedAddressId) {\n        console.log('No address selected for payout.');\n        return;\n      }\n      const token = this.loginUser.token;\n      const payload = {\n        user_id: this.loginUser.user_id,\n        card_id: this.selectedCards.card_num,\n        post_id: this.postid,\n        address_id: this.selectedAddressId // Include the selected address ID\n      };\n      this.util.sendData('payout', payload, token).subscribe({\n        next: response => {\n          if (response.status == 'success') {\n            console.log('Payout Successful:', response.data);\n            this.loadCheckoutData = false; // Turn off loading spinner\n          } else {\n            console.log('Payout Failed:', response.message);\n            this.loadCheckoutData = false; // Turn off loading spinner\n          }\n        },\n        error: err => {\n          console.log('Payout Error:', err);\n          this.loadCheckoutData = false; // Turn off loading spinner\n        }\n      });\n    }\n    navigateToAddCard() {\n      this.router.navigate(['/confirm']);\n    }\n    updateAndNavigate(event, item) {\n      event.preventDefault();\n      console.log('Item to update:', item);\n      this.router.navigate(['/updatecardinfo'], {\n        queryParams: {\n          card_id: item.id\n        }\n      });\n    }\n    deleteCard(cardId) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const alert = yield _this.alertController.create({\n          header: 'Confirm Delete',\n          message: 'Are you sure you want to delete this card?',\n          buttons: [{\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary'\n          }, {\n            text: 'OK',\n            handler: () => {\n              _this.loadCheckoutData = true; // Turn on loading spinner\n              const token = _this.loginUser.token;\n              const data = {\n                id: cardId,\n                user_id: _this.loginUser.id\n              };\n              _this.util.sendData('deletecard', data, token).subscribe({\n                next: p => {\n                  if (p.status == 'success') {\n                    console.log('Card deleted Successfully:', p.data);\n                    _this.loadCheckoutData = false; // Turn off loading spinner\n                    _this.usercarddata();\n                  } else {\n                    console.log('Deletion Failed:', p.message);\n                    _this.loadCheckoutData = false; // Turn off loading spinner\n                  }\n                },\n                error: err => {\n                  console.log('Error:', err);\n                  _this.loadCheckoutData = false; // Turn off loading spinner\n                }\n              });\n            }\n          }]\n        });\n        yield alert.present();\n      })();\n    }\n    formatCardNumber(cardNumber) {\n      // Ensure cardNumber is a string and has at least 4 characters\n      if (cardNumber && cardNumber.length >= 4) {\n        // Replace all but the last 4 digits with 'X'\n        const lastFourDigits = cardNumber.slice(-4);\n        const maskedPart = 'X'.repeat(cardNumber.length - 4);\n        return maskedPart + lastFourDigits;\n      }\n      return cardNumber;\n    }\n    static #_ = (() => this.ɵfac = function SavedcardsPage_Factory(t) {\n      return new (t || SavedcardsPage)(i0.ɵɵdirectiveInject(i1.UtilService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AlertController), i0.ɵɵdirectiveInject(i3.ModalController));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SavedcardsPage,\n      selectors: [[\"app-savedcards\"]],\n      decls: 44,\n      vars: 4,\n      consts: [[\"slot\", \"start\"], [\"color\", \"primary\", \"routerLink\", \"/checkout\", \"routerDirection\", \"back\", 1, \"backbtn\"], [\"src\", \"../../assets/back-dark.svg\"], [1, \"centered-title\"], [\"fullscreen\", \"true\"], [\"class\", \"spinner-container\", 4, \"ngIf\"], [1, \"icon-container\"], [\"name\", \"add-circle-outline\", \"color\", \"danger\", 1, \"custom-icon\", 3, \"click\"], [1, \"scrollable-card-items\"], [\"mode\", \"ios\", \"color\", \"medium\", 4, \"ngFor\", \"ngForOf\"], [1, \"address\"], [\"lines\", \"none\"], [\"slot\", \"end\"], [1, \"cart-total\"], [\"slot\", \"end\", 1, \"ion-text-right\"], [\"translucent\", \"true\", \"mode\", \"md\", 1, \"ion-no-border\"], [\"color\", \"translucent\"], [\"expand\", \"block\", \"color\", \"warning\", \"routerlink\", \"/savedcards\", \"routerDirection\", \"forward\", 1, \"main-button\", 3, \"click\"], [1, \"spinner-container\"], [\"color\", \"primary\"], [\"mode\", \"ios\", \"color\", \"medium\"], [1, \"card-header\"], [\"name\", \"create-outline\", 1, \"edit-button\", 3, \"click\"], [\"slot\", \"end\", 3, \"ionChange\", \"checked\"], [\"name\", \"trash-outline\", \"color\", \"danger\", 1, \"custom-icon\", 3, \"click\"], [1, \"item-info\"], [1, \"font-bold\"]],\n      template: function SavedcardsPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0)(3, \"ion-button\", 1);\n          i0.ɵɵelement(4, \"img\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"ion-title\", 3);\n          i0.ɵɵtext(6, \"Payment Gateway\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"ion-content\", 4);\n          i0.ɵɵtemplate(8, SavedcardsPage_div_8_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"ion-icon\", 7);\n          i0.ɵɵlistener(\"click\", function SavedcardsPage_Template_ion_icon_click_10_listener() {\n            return ctx.navigateToAddCard();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 8);\n          i0.ɵɵtemplate(12, SavedcardsPage_ion_card_12_Template, 14, 4, \"ion-card\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 10)(14, \"ion-item\", 11);\n          i0.ɵɵtext(15);\n          i0.ɵɵelementStart(16, \"ion-badge\", 12);\n          i0.ɵɵtext(17, \"\\u00A0\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(18, \"hr\");\n          i0.ɵɵelementStart(19, \"div\", 13)(20, \"ion-item\", 11)(21, \"ion-label\");\n          i0.ɵɵtext(22, \"UnitPrice\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"ion-label\", 14);\n          i0.ɵɵtext(24, \"10\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"ion-item\", 11)(26, \"ion-label\");\n          i0.ɵɵtext(27, \"Discount\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"ion-label\", 14);\n          i0.ɵɵtext(29, \"5%\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"ion-item\")(31, \"ion-label\");\n          i0.ɵɵtext(32, \"Shipping\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"ion-label\", 14);\n          i0.ɵɵtext(34, \"$10.00\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"ion-item\", 11)(36, \"ion-label\");\n          i0.ɵɵtext(37, \"Total\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"ion-label\", 14);\n          i0.ɵɵtext(39);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(40, \"ion-footer\", 15)(41, \"ion-toolbar\", 16)(42, \"ion-button\", 17);\n          i0.ɵɵlistener(\"click\", function SavedcardsPage_Template_ion_button_click_42_listener() {\n            return ctx.payout();\n          });\n          i0.ɵɵtext(43, \"Paynow\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.loadCheckoutData);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.cardData);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.loginUser.address);\n          i0.ɵɵadvance(24);\n          i0.ɵɵtextInterpolate(ctx.totaprice);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i3.IonBadge, i3.IonButton, i3.IonButtons, i3.IonCard, i3.IonCardContent, i3.IonCheckbox, i3.IonContent, i3.IonFooter, i3.IonHeader, i3.IonIcon, i3.IonItem, i3.IonLabel, i3.IonSpinner, i3.IonTitle, i3.IonToolbar, i3.BooleanValueAccessor, i3.RouterLinkDelegate, i2.RouterLink],\n      styles: [\".icon-container[_ngcontent-%COMP%]{position:absolute;top:60px;right:16px;z-index:10}ion-header[_ngcontent-%COMP%]{position:relative}ion-content[_ngcontent-%COMP%]{--padding-top: 80px;--padding-bottom: 16px;--padding-start: 26px;--padding-end: 26px;position:absolute}.custom-icon[_ngcontent-%COMP%]{font-size:36px;font-weight:700}.spinner-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100vh}.scrollable-card-items[_ngcontent-%COMP%]{max-height:290px;overflow-y:auto;margin-top:10px}.scrollable-card-items[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]{margin-left:0;margin-right:0;border-radius:0;margin-top:20px}.scrollable-card-items[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]   ion-card-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;position:relative}.scrollable-card-items[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]   ion-card-content[_ngcontent-%COMP%]   .item-info[_ngcontent-%COMP%]{flex-grow:1}.scrollable-card-items[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]   ion-card-content[_ngcontent-%COMP%]   .item-info[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:16px}.scrollable-card-items[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]   ion-card-content[_ngcontent-%COMP%]   .item-info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:nth-child(1){color:#434343}.scrollable-card-items[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]   ion-card-content[_ngcontent-%COMP%]   .item-info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:nth-child(2){color:#919191}.scrollable-card-items[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]   ion-card-content[_ngcontent-%COMP%]   .item-info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:nth-child(3){color:var(--ion-color-primary)}.scrollable-card-items[_ngcontent-%COMP%]   .address[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{--padding-start: 0;font-size:18px;color:#434343}.scrollable-card-items[_ngcontent-%COMP%]   .address[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%]{width:12px;height:12px;padding:0;border-radius:50%}.scrollable-card-items[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{background:#97979713}.scrollable-card-items[_ngcontent-%COMP%]   .cart-total[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{--padding-start: 0;--inner-padding-end: 0}.scrollable-card-items[_ngcontent-%COMP%]   .cart-total[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%]{margin-right:0}.scrollable-card-items[_ngcontent-%COMP%]   .cart-total[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%]:nth-child(1){color:#919191}.scrollable-card-items[_ngcontent-%COMP%]   .cart-total[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%]:nth-child(2){color:#434343}ion-footer[_ngcontent-%COMP%]{padding-left:20px;padding-right:20px}ion-footer[_ngcontent-%COMP%]   .main-button[_ngcontent-%COMP%]:after{box-shadow:none!important}.font-bold[_ngcontent-%COMP%]{font-weight:700}.card-header[_ngcontent-%COMP%]{position:absolute;top:10px;right:10px;z-index:10}.edit-button[_ngcontent-%COMP%]{color:red;font-weight:700;font-size:24px;margin-right:8px;cursor:pointer}\"]\n    }))();\n  }\n  return SavedcardsPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../util.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/router\";\nfunction AddAddressPage_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"ion-spinner\", 7);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAddressPage_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 8)(2, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function AddAddressPage_div_9_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.address());\n    });\n    i0.ɵɵelementStart(3, \"ion-item\")(4, \"ion-label\", 10);\n    i0.ɵɵtext(5, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"ion-input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-item\")(8, \"ion-label\", 10);\n    i0.ɵɵtext(9, \"Location\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 12)(11, \"ion-chip\", 13);\n    i0.ɵɵlistener(\"click\", function AddAddressPage_div_9_Template_ion_chip_click_11_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setLocation(\"Home\"));\n    });\n    i0.ɵɵelementStart(12, \"ion-label\");\n    i0.ɵɵtext(13, \"Home\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"ion-chip\", 13);\n    i0.ɵɵlistener(\"click\", function AddAddressPage_div_9_Template_ion_chip_click_14_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setLocation(\"Work\"));\n    });\n    i0.ɵɵelementStart(15, \"ion-label\");\n    i0.ɵɵtext(16, \"Work\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"ion-chip\", 13);\n    i0.ɵɵlistener(\"click\", function AddAddressPage_div_9_Template_ion_chip_click_17_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setLocation(\"Other\"));\n    });\n    i0.ɵɵelementStart(18, \"ion-label\");\n    i0.ɵɵtext(19, \"Other\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(20, \"ion-button\", 14);\n    i0.ɵɵtext(21, \"Add Address\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.addaddress);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"outline\", ((tmp_2_0 = ctx_r1.addaddress.get(\"location\")) == null ? null : tmp_2_0.value) !== \"Home\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"outline\", ((tmp_3_0 = ctx_r1.addaddress.get(\"location\")) == null ? null : tmp_3_0.value) !== \"Work\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"outline\", ((tmp_4_0 = ctx_r1.addaddress.get(\"location\")) == null ? null : tmp_4_0.value) !== \"Other\");\n  }\n}\nexport let AddAddressPage = /*#__PURE__*/(() => {\n  class AddAddressPage {\n    constructor(util) {\n      this.util = util;\n      this.loginUser = [];\n      this.addressData = [];\n      this.loadData = true;\n      this.addaddress = new FormGroup({\n        address: new FormControl('', Validators.required),\n        location: new FormControl('', Validators.required)\n      });\n    }\n    ionViewWillEnter() {\n      this.getloginUser();\n      this.address();\n    }\n    getloginUser() {\n      let login = JSON.parse(localStorage.getItem('login'));\n      if (login != null) {\n        this.loginUser = login;\n      }\n    }\n    setLocation(location) {\n      this.addaddress.get('location')?.setValue(location);\n    }\n    address() {\n      if (this.addaddress.valid) {\n        this.loadData = true;\n        const token = this.loginUser.token;\n        const userid = this.loginUser.id;\n        const addressDetails = {\n          user_id: userid,\n          address: this.addaddress.get('address')?.value,\n          location: this.addaddress.get('location')?.value\n        };\n        this.util.sendData('addaddress', addressDetails, token).subscribe({\n          next: p => {\n            if (p.status = 'success') {\n              this.addressData = p.data;\n              this.util.presentToast('Address added successfully');\n              console.log('Address Added:', this.addressData);\n              this.addaddress.reset();\n            } else {\n              this.util.presentToast(p.message || 'Failed to add address');\n            }\n            this.loadData = false;\n          },\n          error: () => {\n            this.loadData = false;\n            console.log('An Error Occurred. Please try again later');\n          }\n        });\n      } else {\n        console.log('Error', this.addaddress.invalid);\n      }\n    }\n    static #_ = (() => this.ɵfac = function AddAddressPage_Factory(t) {\n      return new (t || AddAddressPage)(i0.ɵɵdirectiveInject(i1.UtilService));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddAddressPage,\n      selectors: [[\"app-add-address\"]],\n      decls: 10,\n      vars: 3,\n      consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"color\", \"primary\", \"routerLink\", \"/checkout\", \"routerDirection\", \"back\", 1, \"backbtn\"], [\"src\", \"../../assets/back-dark.svg\"], [\"class\", \"spinner-container\", 4, \"ngIf\"], [\"class\", \"card-info\", 4, \"ngIf\"], [1, \"spinner-container\"], [\"color\", \"primary\"], [1, \"card-info\"], [3, \"ngSubmit\", \"formGroup\"], [\"position\", \"floating\"], [\"formControlName\", \"address\"], [1, \"chip-group\"], [\"color\", \"tertiary\", 3, \"click\", \"outline\"], [\"expand\", \"full\", \"type\", \"submit\", 1, \"addaddress\"]],\n      template: function AddAddressPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1)(3, \"ion-button\", 2);\n          i0.ɵɵelement(4, \"img\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"ion-title\");\n          i0.ɵɵtext(6, \"add-address\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"ion-content\");\n          i0.ɵɵtemplate(8, AddAddressPage_div_8_Template, 2, 0, \"div\", 4)(9, AddAddressPage_div_9_Template, 22, 4, \"div\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"translucent\", true);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loadData);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadData);\n        }\n      },\n      dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i4.IonButton, i4.IonButtons, i4.IonChip, i4.IonContent, i4.IonHeader, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonSpinner, i4.IonTitle, i4.IonToolbar, i4.TextValueAccessor, i4.RouterLinkDelegate, i3.FormGroupDirective, i3.FormControlName, i5.RouterLink]\n    }))();\n  }\n  return AddAddressPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
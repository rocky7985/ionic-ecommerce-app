{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../util.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nfunction FavoritePage_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"ion-spinner\", 10);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FavoritePage_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"p\", 12);\n    i0.ɵɵtext(2, \"No Favourites.Please Add!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FavoritePage_ion_grid_11_ion_col_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-col\", 14)(1, \"div\", 15)(2, \"div\", 16)(3, \"ion-icon\", 17);\n    i0.ɵɵlistener(\"click\", function FavoritePage_ion_grid_11_ion_col_2_Template_ion_icon_click_3_listener() {\n      const product_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.deleteFavourites(product_r2.Id));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"img\", 18);\n    i0.ɵɵlistener(\"click\", function FavoritePage_ion_grid_11_ion_col_2_Template_img_click_4_listener() {\n      const product_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.navigateToItemDetails(product_r2.Id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h6\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", product_r2.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", product_r2.price, \"\");\n  }\n}\nfunction FavoritePage_ion_grid_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-grid\")(1, \"ion-row\");\n    i0.ɵɵtemplate(2, FavoritePage_ion_grid_11_ion_col_2_Template, 9, 3, \"ion-col\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.favouriteData);\n  }\n}\nfunction FavoritePage_ion_infinite_scroll_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-infinite-scroll\", 19);\n    i0.ɵɵlistener(\"ionInfinite\", function FavoritePage_ion_infinite_scroll_12_Template_ion_infinite_scroll_ionInfinite_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.favorite($event));\n    });\n    i0.ɵɵelement(1, \"ion-infinite-scroll-content\", 20);\n    i0.ɵɵelementEnd();\n  }\n}\n// import { AlertController } from '@ionic/angular';  // Import AlertController\nexport let FavoritePage = /*#__PURE__*/(() => {\n  class FavoritePage {\n    constructor(util, router) {\n      this.util = util;\n      this.router = router;\n      this.favouriteData = [];\n      this.loginUser = [];\n      this.loadFavourites = true;\n      this.page = 1;\n      this.loadMoreProducts = true;\n    }\n    ionViewWillEnter() {\n      this.getLoginUser();\n      this.favorite();\n    }\n    getLoginUser() {\n      let user = JSON.parse(localStorage.getItem('login'));\n      if (user != null) {\n        this.loginUser = user;\n      }\n    }\n    favorite(event) {\n      // this.favouriteData = [];\n      const token = this.loginUser.token;\n      const postData = {\n        user_id: this.loginUser.id,\n        paged: this.page\n      };\n      this.util.sendData('favouriteData', postData, token).subscribe({\n        next: p => {\n          if (p.status == 'success') {\n            const favourite = p.data;\n            console.log('Favourite Data:', this.favouriteData);\n            if (favourite.length == 0) {\n              this.loadMoreProducts = false;\n              event?.target.complete(); // Complete infinite scroll event\n              return;\n            }\n            this.favouriteData = [...this.favouriteData, ...favourite];\n            if (favourite.length < 6) {\n              this.loadMoreProducts = false;\n            } else {\n              this.page++;\n            }\n            this.loadFavourites = false;\n            event?.target.complete(); // Complete infinite scroll event\n            console.log('Favourite Data:', this.favouriteData);\n          } else {\n            console.log('An error occurred. Try Again.');\n            this.loadFavourites = false;\n            event?.target.complete(); // Complete infinite scroll in case of error\n          }\n        },\n        error: err => {\n          console.log('Error loading favourites:', err);\n          this.loadFavourites = false;\n          event?.target.complete(); // Complete infinite scroll in case of error\n        }\n      });\n    }\n    // async confirmDelete(postId: number) {\n    //   const alert = await this.alertController.create({\n    //     header: 'Confirm Delete',\n    //     message: 'Are you sure you want to delete this item from your favourites?',\n    //     buttons: [\n    //       {\n    //         text: 'Cancel',\n    //         role: 'cancel',\n    //         cssClass: 'secondary',\n    //         handler: () => {\n    //           console.log('Delete cancelled');\n    //         }\n    //       }, {\n    //         text: 'Delete',\n    //         handler: () => {\n    //           this.deleteFavourites(postId);\n    //         }\n    //       }\n    //     ]\n    //   });\n    //   await alert.present();\n    // }\n    deleteFavourites(postid) {\n      const token = this.loginUser.token;\n      const postData = {\n        user_id: this.loginUser.id,\n        post_id: postid\n      };\n      this.loadFavourites = true;\n      this.util.sendData('favourites', postData, token).subscribe({\n        next: p => {\n          if (p.status == 'success') {\n            console.log('Item Removed from Favourites', postid);\n            this.favouriteData = this.favouriteData.filter(item => item.Id !== postid);\n            this.loadFavourites = false;\n          } else {\n            console.log('Failed to remove favourite.');\n            this.loadFavourites = false;\n          }\n        },\n        error: err => {\n          console.log('Error deleting favourite:', err);\n          this.loadFavourites = false; // Hide spinner in case of error\n        }\n      });\n    }\n    navigateToItemDetails(id) {\n      this.router.navigate(['/item-details', id]);\n    }\n    static #_ = (() => this.ɵfac = function FavoritePage_Factory(t) {\n      return new (t || FavoritePage)(i0.ɵɵdirectiveInject(i1.UtilService), i0.ɵɵdirectiveInject(i2.Router));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FavoritePage,\n      selectors: [[\"app-favorite\"]],\n      decls: 13,\n      vars: 4,\n      consts: [[\"slot\", \"start\"], [\"color\", \"primary\", \"routerLink\", \"/home\", \"routerDirection\", \"back\", 1, \"backbtn\"], [\"src\", \"../../assets/back-dark.svg\"], [1, \"title-container\"], [1, \"title\"], [\"class\", \"spinner-container\", 4, \"ngIf\"], [\"class\", \"empty-cart-message\", 4, \"ngIf\"], [4, \"ngIf\"], [\"threshold\", \"100px\", 3, \"ionInfinite\", 4, \"ngIf\"], [1, \"spinner-container\"], [\"color\", \"tertiary\"], [1, \"empty-cart-message\"], [1, \"font-bold\"], [\"size\", \"6\", \"class\", \"ion-text-left padding-left0\", 4, \"ngFor\", \"ngForOf\"], [\"size\", \"6\", 1, \"ion-text-left\", \"padding-left0\"], [1, \"favorite-items\"], [1, \"icon-container\"], [\"name\", \"heart\", \"color\", \"danger\", 3, \"click\"], [3, \"click\", \"src\"], [\"threshold\", \"100px\", 3, \"ionInfinite\"], [\"loadingSpinner\", \"bubbles\", \"loadingText\", \"Loading more data...\"]],\n      template: function FavoritePage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0)(3, \"ion-button\", 1);\n          i0.ɵɵelement(4, \"img\", 2);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(5, \"ion-content\")(6, \"div\", 3)(7, \"h1\", 4);\n          i0.ɵɵtext(8, \"Favourites\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(9, FavoritePage_div_9_Template, 2, 0, \"div\", 5)(10, FavoritePage_div_10_Template, 3, 0, \"div\", 6)(11, FavoritePage_ion_grid_11_Template, 3, 1, \"ion-grid\", 7)(12, FavoritePage_ion_infinite_scroll_12_Template, 2, 0, \"ion-infinite-scroll\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.loadFavourites);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loadFavourites && ctx.favouriteData.length == 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loadFavourites && ctx.favouriteData.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadMoreProducts);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.IonButton, i4.IonButtons, i4.IonCol, i4.IonContent, i4.IonGrid, i4.IonHeader, i4.IonIcon, i4.IonInfiniteScroll, i4.IonInfiniteScrollContent, i4.IonRow, i4.IonSpinner, i4.IonToolbar, i4.RouterLinkDelegate, i2.RouterLink],\n      styles: [\".backbtn[_ngcontent-%COMP%]{margin-left:15px}.notification[_ngcontent-%COMP%]{margin-right:15px}ion-content[_ngcontent-%COMP%]{--padding-top: 16px;--padding-bottom: 16px;--padding-start: 26px;--padding-end: 26px}.title-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;margin-top:0;margin-bottom:16px}.title[_ngcontent-%COMP%]{margin-top:0;color:#434343}.spinner-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100%;width:100%;position:absolute;top:0;left:0}.favorite-items[_ngcontent-%COMP%]{position:relative;margin-top:20px}.favorite-items[_ngcontent-%COMP%]   ion-col[_ngcontent-%COMP%]{padding:10px}.favorite-items[_ngcontent-%COMP%]   ion-col[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:180px;object-fit:cover;border-radius:8px}.favorite-items[_ngcontent-%COMP%]   ion-col[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-top:5px;margin-bottom:0}.favorite-items[_ngcontent-%COMP%]   ion-col[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{margin-top:5px;margin-bottom:0}.icon-container[_ngcontent-%COMP%]{position:absolute;top:8px;right:8px;z-index:1}.icon-container[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{font-size:24px;font-weight:700;cursor:pointer}.empty-cart-message[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100%;text-align:center}.empty-cart-message[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.2em;color:var(--ion-color-dark)}.padding-left0[_ngcontent-%COMP%]{padding-left:0!important}.padding-right0[_ngcontent-%COMP%]{padding-right:0!important}.font-bold[_ngcontent-%COMP%]{font-weight:700}\"]\n    }))();\n  }\n  return FavoritePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { forkJoin } from 'rxjs'; // Import forkJoin from RxJS\nimport { tap } from 'rxjs/operators'; // Import tap from RxJS operators\nlet PostCategoryPage = class PostCategoryPage {\n  constructor(route,\n  // Inject ActivatedRoute\n  util, router // Inject Router\n  ) {\n    this.route = route;\n    this.util = util;\n    this.router = router;\n    this.posts = [];\n    this.dataLoaded = false; // Track if the data has been loaded\n    this.page = 1;\n    this.loadMoreProducts = true;\n  }\n  ionViewWillEnter() {\n    this.category = this.route.snapshot.paramMap.get('category'); // Get the category from route parameters\n    this.posts = [];\n    this.page = 1;\n    this.loadMoreProducts = true;\n    this.getCategoryPosts();\n  }\n  getCategoryPosts(event) {\n    this.dataLoaded = true; // Set dataLoaded to true when data is fully loaded\n    const login = JSON.parse(localStorage.getItem('login'));\n    const logindata = login.token;\n    const payload = {\n      category: this.category,\n      paged: this.page\n    }; // Include the category in the payload\n    this.util.sendData('getPostByCategory', payload, logindata).subscribe({\n      next: p => {\n        if (p.status == 'success') {\n          const newposts = p.data;\n          console.log('CategoryPosts', newposts);\n          // Array to hold the observable checks for favourites\n          const favouriteChecks = newposts.map(product => {\n            const data = {\n              user_id: login.id,\n              post_id: product.Id\n            };\n            return this.util.sendData('checkFavourite', data, logindata).pipe(tap(response => {\n              product.isFavourite = response.message == 'Product is in favourites';\n            }));\n          });\n          // Wait for all favourite checks to complete\n          forkJoin(favouriteChecks).subscribe({\n            next: () => {\n              this.posts = [...this.posts, ...newposts];\n              if (newposts.length == 0) {\n                this.loadMoreProducts = false;\n              } else {\n                this.page++;\n              }\n              this.dataLoaded = false;\n              console.log('CategoryPosts Products after Favourite Check:', this.posts);\n              event?.target.complete();\n            },\n            error: () => {\n              this.dataLoaded = false;\n              console.log('Error checking favourites');\n              event?.target.complete();\n            }\n          });\n        }\n      },\n      error: () => {\n        console.log('No Posts Found');\n        this.dataLoaded = false;\n        event.target.complete(); // Complete infinite scroll event\n      }\n    });\n  }\n  navigateToItemDetails(id) {\n    this.router.navigate(['/item-details', id]);\n  }\n  // Infinite Scroll Handler\n  loadMore(event) {\n    if (this.loadMoreProducts) {\n      this.getCategoryPosts(event);\n    } else {\n      event.target.disabled = true;\n    }\n  }\n};\nPostCategoryPage = __decorate([Component({\n  selector: 'app-post-category',\n  templateUrl: './post-category.page.html',\n  styleUrls: ['./post-category.page.scss']\n})], PostCategoryPage);\nexport { PostCategoryPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
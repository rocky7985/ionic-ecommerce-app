{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../util.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ForgetPasswordPage_ion_spinner_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\", 8);\n  }\n}\nfunction ForgetPasswordPage_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item\")(2, \"ion-label\", 3);\n    i0.ɵɵtext(3, \"Enter OTP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-input\", 9);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ForgetPasswordPage_div_13_Template_ion_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.otp, $event) || (ctx_r1.otp = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-button\", 5);\n    i0.ɵɵlistener(\"click\", function ForgetPasswordPage_div_13_Template_ion_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.verifyOtp());\n    });\n    i0.ɵɵtext(6, \" Verify OTP \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.otp);\n  }\n}\nfunction ForgetPasswordPage_ion_spinner_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\", 8);\n  }\n}\nexport let ForgetPasswordPage = /*#__PURE__*/(() => {\n  class ForgetPasswordPage {\n    constructor(util, navCtrl, router // Inject Router\n    ) {\n      this.util = util;\n      this.navCtrl = navCtrl;\n      this.router = router;\n      this.email = '';\n      this.loadOTP = false;\n      this.otp = '';\n      this.showOtpInput = false;\n      this.verifyingOtp = false;\n      this.data = [];\n    }\n    ionViewWillEnter() {\n      this.email = '';\n      this.loadOTP = false;\n      this.otp = '';\n      this.showOtpInput = false;\n      this.verifyingOtp = false;\n    }\n    checkEmail() {\n      if (this.email == '') {\n        this.util.presentToast('Email is required.');\n        return;\n      }\n      // const email = this.email\n      const emaildata = {\n        user_email: this.email\n      };\n      this.loadOTP = true;\n      this.util.post('forgetPassword', emaildata).subscribe({\n        next: response => {\n          if (response.status == 'success') {\n            this.loadOTP = false;\n            this.showOtpInput = true; // Show OTP input\n            this.util.presentToast('OTP sent successfully.');\n            this.data = response.data;\n            console.log('Data:', this.data);\n          } else {\n            this.util.presentToast(response.message || 'Failed to send OTP. Try Again.');\n          }\n        },\n        error: err => {\n          console.error('Error occurred:', err);\n          this.util.presentToast('An error occurred while sending OTP. Try again.');\n        }\n      });\n    }\n    verifyOtp() {\n      if (this.otp == '') {\n        this.util.presentToast('OTP is required.');\n        return;\n      }\n      this.verifyingOtp = true;\n      const data = {\n        user_id: this.email,\n        // Assuming user_id is represented by the email for now\n        otp: this.otp\n      };\n      this.util.post('verifyOtp', data).subscribe({\n        next: response => {\n          // this.verifyingOtp = false;  // Hide the spinner on response\n          if (response.status == 'success') {\n            this.util.presentToast('OTP verified successfully.');\n            this.verifyingOtp = false; // Hide the spinner on response\n            // Redirect to reset password or another page\n            this.router.navigate(['/resetpassword']);\n          } else {\n            this.util.presentToast(response.message || 'Invalid OTP. Please try again.');\n          }\n        },\n        error: err => {\n          this.verifyingOtp = false;\n          console.error('Error occurred:', err);\n          this.util.presentToast('An error occurred while verifying OTP. Try again.');\n        }\n      });\n    }\n    static #_ = (() => this.ɵfac = function ForgetPasswordPage_Factory(t) {\n      return new (t || ForgetPasswordPage)(i0.ɵɵdirectiveInject(i1.UtilService), i0.ɵɵdirectiveInject(i2.NavController), i0.ɵɵdirectiveInject(i3.Router));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgetPasswordPage,\n      selectors: [[\"app-forget-password\"]],\n      decls: 15,\n      vars: 6,\n      consts: [[3, \"translucent\"], [3, \"fullscreen\"], [1, \"container\"], [\"position\", \"floating\"], [\"type\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"block\", 3, \"click\"], [\"color\", \"tertiary\", 4, \"ngIf\"], [4, \"ngIf\"], [\"color\", \"tertiary\"], [\"type\", \"text\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"]],\n      template: function ForgetPasswordPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n          i0.ɵɵtext(3, \"Forget Password\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"div\", 2)(6, \"ion-item\")(7, \"ion-label\", 3);\n          i0.ɵɵtext(8, \"Enter your email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"ion-input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ForgetPasswordPage_Template_ion_input_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"ion-button\", 5);\n          i0.ɵɵlistener(\"click\", function ForgetPasswordPage_Template_ion_button_click_10_listener() {\n            return ctx.checkEmail();\n          });\n          i0.ɵɵtext(11, \" Send OTP \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, ForgetPasswordPage_ion_spinner_12_Template, 1, 0, \"ion-spinner\", 6)(13, ForgetPasswordPage_div_13_Template, 7, 1, \"div\", 7)(14, ForgetPasswordPage_ion_spinner_14_Template, 1, 0, \"ion-spinner\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"translucent\", true);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.loadOTP);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showOtpInput);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.verifyingOtp);\n        }\n      },\n      dependencies: [i4.NgIf, i5.NgControlStatus, i5.RequiredValidator, i5.NgModel, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonSpinner, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor]\n    }))();\n  }\n  return ForgetPasswordPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}